pragma circom 2.1.5;

include "@zk-email/zk-regex-circom/circuits/regex_helpers.circom";

// regex: Referencia de pago:</span><br><span style=3D"font-fam=ily:&#39;Proxima Nova&#39;,_apple_system,&#39;Helvetica Neue&#39;,Helvetica=,Roboto,Arial,sans-serif;font-size:14px;color:rgba(0,0,0,0.8);font-weight:n=ormal;line-height:1.43;margin:0px;letter-spacing:-0.025px">[0-9]+
template TwitterResetRegex(msg_bytes) {
	signal input msg[msg_bytes];
	signal output out;

	var num_bytes = msg_bytes+1;
	signal in[num_bytes];
	in[0]<==255;
	for (var i = 0; i < msg_bytes; i++) {
		in[i+1] <== msg[i];
	}

	component eq[98][num_bytes];
	component lt[12][num_bytes];
	component and[313][num_bytes];
	component multi_or[15][num_bytes];
	signal states[num_bytes+1][286];
	signal states_tmp[num_bytes+1][286];
	signal from_zero_enabled[num_bytes+1];
	from_zero_enabled[num_bytes] <== 0;
	component state_changed[num_bytes];

	for (var i = 1; i < 286; i++) {
		states[0][i] <== 0;
	}

	for (var i = 0; i < num_bytes; i++) {
		state_changed[i] = MultiOR(285);
		states[i][0] <== 1;
		eq[0][i] = IsEqual();
		eq[0][i].in[0] <== in[i];
		eq[0][i].in[1] <== 82;
		and[0][i] = AND();
		and[0][i].a <== states[i][0];
		and[0][i].b <== eq[0][i].out;
		states_tmp[i+1][1] <== 0;
		eq[1][i] = IsEqual();
		eq[1][i].in[0] <== in[i];
		eq[1][i].in[1] <== 101;
		and[1][i] = AND();
		and[1][i].a <== states[i][1];
		and[1][i].b <== eq[1][i].out;
		states[i+1][2] <== and[1][i].out;
		eq[2][i] = IsEqual();
		eq[2][i].in[0] <== in[i];
		eq[2][i].in[1] <== 102;
		and[2][i] = AND();
		and[2][i].a <== states[i][2];
		and[2][i].b <== eq[2][i].out;
		states[i+1][3] <== and[2][i].out;
		and[3][i] = AND();
		and[3][i].a <== states[i][3];
		and[3][i].b <== eq[1][i].out;
		states[i+1][4] <== and[3][i].out;
		eq[3][i] = IsEqual();
		eq[3][i].in[0] <== in[i];
		eq[3][i].in[1] <== 114;
		and[4][i] = AND();
		and[4][i].a <== states[i][4];
		and[4][i].b <== eq[3][i].out;
		states[i+1][5] <== and[4][i].out;
		and[5][i] = AND();
		and[5][i].a <== states[i][5];
		and[5][i].b <== eq[1][i].out;
		states[i+1][6] <== and[5][i].out;
		eq[4][i] = IsEqual();
		eq[4][i].in[0] <== in[i];
		eq[4][i].in[1] <== 110;
		and[6][i] = AND();
		and[6][i].a <== states[i][6];
		and[6][i].b <== eq[4][i].out;
		states[i+1][7] <== and[6][i].out;
		eq[5][i] = IsEqual();
		eq[5][i].in[0] <== in[i];
		eq[5][i].in[1] <== 99;
		and[7][i] = AND();
		and[7][i].a <== states[i][7];
		and[7][i].b <== eq[5][i].out;
		states[i+1][8] <== and[7][i].out;
		eq[6][i] = IsEqual();
		eq[6][i].in[0] <== in[i];
		eq[6][i].in[1] <== 105;
		and[8][i] = AND();
		and[8][i].a <== states[i][8];
		and[8][i].b <== eq[6][i].out;
		states[i+1][9] <== and[8][i].out;
		eq[7][i] = IsEqual();
		eq[7][i].in[0] <== in[i];
		eq[7][i].in[1] <== 97;
		and[9][i] = AND();
		and[9][i].a <== states[i][9];
		and[9][i].b <== eq[7][i].out;
		states[i+1][10] <== and[9][i].out;
		eq[8][i] = IsEqual();
		eq[8][i].in[0] <== in[i];
		eq[8][i].in[1] <== 32;
		and[10][i] = AND();
		and[10][i].a <== states[i][10];
		and[10][i].b <== eq[8][i].out;
		states[i+1][11] <== and[10][i].out;
		eq[9][i] = IsEqual();
		eq[9][i].in[0] <== in[i];
		eq[9][i].in[1] <== 100;
		and[11][i] = AND();
		and[11][i].a <== states[i][11];
		and[11][i].b <== eq[9][i].out;
		states[i+1][12] <== and[11][i].out;
		and[12][i] = AND();
		and[12][i].a <== states[i][12];
		and[12][i].b <== eq[1][i].out;
		states[i+1][13] <== and[12][i].out;
		and[13][i] = AND();
		and[13][i].a <== states[i][13];
		and[13][i].b <== eq[8][i].out;
		states[i+1][14] <== and[13][i].out;
		eq[10][i] = IsEqual();
		eq[10][i].in[0] <== in[i];
		eq[10][i].in[1] <== 112;
		and[14][i] = AND();
		and[14][i].a <== states[i][14];
		and[14][i].b <== eq[10][i].out;
		states[i+1][15] <== and[14][i].out;
		and[15][i] = AND();
		and[15][i].a <== states[i][15];
		and[15][i].b <== eq[7][i].out;
		states[i+1][16] <== and[15][i].out;
		eq[11][i] = IsEqual();
		eq[11][i].in[0] <== in[i];
		eq[11][i].in[1] <== 103;
		and[16][i] = AND();
		and[16][i].a <== states[i][16];
		and[16][i].b <== eq[11][i].out;
		states[i+1][17] <== and[16][i].out;
		eq[12][i] = IsEqual();
		eq[12][i].in[0] <== in[i];
		eq[12][i].in[1] <== 111;
		and[17][i] = AND();
		and[17][i].a <== states[i][17];
		and[17][i].b <== eq[12][i].out;
		states[i+1][18] <== and[17][i].out;
		eq[13][i] = IsEqual();
		eq[13][i].in[0] <== in[i];
		eq[13][i].in[1] <== 58;
		and[18][i] = AND();
		and[18][i].a <== states[i][18];
		and[18][i].b <== eq[13][i].out;
		states[i+1][19] <== and[18][i].out;
		eq[14][i] = IsEqual();
		eq[14][i].in[0] <== in[i];
		eq[14][i].in[1] <== 60;
		and[19][i] = AND();
		and[19][i].a <== states[i][19];
		and[19][i].b <== eq[14][i].out;
		states[i+1][20] <== and[19][i].out;
		eq[15][i] = IsEqual();
		eq[15][i].in[0] <== in[i];
		eq[15][i].in[1] <== 47;
		and[20][i] = AND();
		and[20][i].a <== states[i][20];
		and[20][i].b <== eq[15][i].out;
		states[i+1][21] <== and[20][i].out;
		eq[16][i] = IsEqual();
		eq[16][i].in[0] <== in[i];
		eq[16][i].in[1] <== 115;
		and[21][i] = AND();
		and[21][i].a <== states[i][21];
		and[21][i].b <== eq[16][i].out;
		states[i+1][22] <== and[21][i].out;
		and[22][i] = AND();
		and[22][i].a <== states[i][22];
		and[22][i].b <== eq[10][i].out;
		states[i+1][23] <== and[22][i].out;
		and[23][i] = AND();
		and[23][i].a <== states[i][23];
		and[23][i].b <== eq[7][i].out;
		states[i+1][24] <== and[23][i].out;
		and[24][i] = AND();
		and[24][i].a <== states[i][24];
		and[24][i].b <== eq[4][i].out;
		states[i+1][25] <== and[24][i].out;
		eq[17][i] = IsEqual();
		eq[17][i].in[0] <== in[i];
		eq[17][i].in[1] <== 62;
		and[25][i] = AND();
		and[25][i].a <== states[i][25];
		and[25][i].b <== eq[17][i].out;
		states[i+1][26] <== and[25][i].out;
		and[26][i] = AND();
		and[26][i].a <== states[i][26];
		and[26][i].b <== eq[14][i].out;
		states[i+1][27] <== and[26][i].out;
		eq[18][i] = IsEqual();
		eq[18][i].in[0] <== in[i];
		eq[18][i].in[1] <== 98;
		and[27][i] = AND();
		and[27][i].a <== states[i][27];
		and[27][i].b <== eq[18][i].out;
		states[i+1][28] <== and[27][i].out;
		and[28][i] = AND();
		and[28][i].a <== states[i][28];
		and[28][i].b <== eq[3][i].out;
		states[i+1][29] <== and[28][i].out;
		and[29][i] = AND();
		and[29][i].a <== states[i][29];
		and[29][i].b <== eq[17][i].out;
		states[i+1][30] <== and[29][i].out;
		and[30][i] = AND();
		and[30][i].a <== states[i][30];
		and[30][i].b <== eq[14][i].out;
		states[i+1][31] <== and[30][i].out;
		and[31][i] = AND();
		and[31][i].a <== states[i][31];
		and[31][i].b <== eq[16][i].out;
		states[i+1][32] <== and[31][i].out;
		and[32][i] = AND();
		and[32][i].a <== states[i][32];
		and[32][i].b <== eq[10][i].out;
		states[i+1][33] <== and[32][i].out;
		and[33][i] = AND();
		and[33][i].a <== states[i][33];
		and[33][i].b <== eq[7][i].out;
		states[i+1][34] <== and[33][i].out;
		and[34][i] = AND();
		and[34][i].a <== states[i][34];
		and[34][i].b <== eq[4][i].out;
		states[i+1][35] <== and[34][i].out;
		and[35][i] = AND();
		and[35][i].a <== states[i][35];
		and[35][i].b <== eq[8][i].out;
		states[i+1][36] <== and[35][i].out;
		and[36][i] = AND();
		and[36][i].a <== states[i][36];
		and[36][i].b <== eq[16][i].out;
		states[i+1][37] <== and[36][i].out;
		eq[19][i] = IsEqual();
		eq[19][i].in[0] <== in[i];
		eq[19][i].in[1] <== 116;
		and[37][i] = AND();
		and[37][i].a <== states[i][37];
		and[37][i].b <== eq[19][i].out;
		states[i+1][38] <== and[37][i].out;
		eq[20][i] = IsEqual();
		eq[20][i].in[0] <== in[i];
		eq[20][i].in[1] <== 121;
		and[38][i] = AND();
		and[38][i].a <== states[i][38];
		and[38][i].b <== eq[20][i].out;
		states[i+1][39] <== and[38][i].out;
		eq[21][i] = IsEqual();
		eq[21][i].in[0] <== in[i];
		eq[21][i].in[1] <== 108;
		and[39][i] = AND();
		and[39][i].a <== states[i][39];
		and[39][i].b <== eq[21][i].out;
		states[i+1][40] <== and[39][i].out;
		and[40][i] = AND();
		and[40][i].a <== states[i][40];
		and[40][i].b <== eq[1][i].out;
		states[i+1][41] <== and[40][i].out;
		eq[22][i] = IsEqual();
		eq[22][i].in[0] <== in[i];
		eq[22][i].in[1] <== 61;
		and[41][i] = AND();
		and[41][i].a <== states[i][41];
		and[41][i].b <== eq[22][i].out;
		states[i+1][42] <== and[41][i].out;
		eq[23][i] = IsEqual();
		eq[23][i].in[0] <== in[i];
		eq[23][i].in[1] <== 51;
		and[42][i] = AND();
		and[42][i].a <== states[i][42];
		and[42][i].b <== eq[23][i].out;
		states[i+1][43] <== and[42][i].out;
		eq[24][i] = IsEqual();
		eq[24][i].in[0] <== in[i];
		eq[24][i].in[1] <== 68;
		and[43][i] = AND();
		and[43][i].a <== states[i][43];
		and[43][i].b <== eq[24][i].out;
		states[i+1][44] <== and[43][i].out;
		eq[25][i] = IsEqual();
		eq[25][i].in[0] <== in[i];
		eq[25][i].in[1] <== 34;
		and[44][i] = AND();
		and[44][i].a <== states[i][44];
		and[44][i].b <== eq[25][i].out;
		states[i+1][45] <== and[44][i].out;
		and[45][i] = AND();
		and[45][i].a <== states[i][45];
		and[45][i].b <== eq[2][i].out;
		states[i+1][46] <== and[45][i].out;
		and[46][i] = AND();
		and[46][i].a <== states[i][46];
		and[46][i].b <== eq[12][i].out;
		states[i+1][47] <== and[46][i].out;
		and[47][i] = AND();
		and[47][i].a <== states[i][47];
		and[47][i].b <== eq[4][i].out;
		states[i+1][48] <== and[47][i].out;
		and[48][i] = AND();
		and[48][i].a <== states[i][48];
		and[48][i].b <== eq[19][i].out;
		states[i+1][49] <== and[48][i].out;
		eq[26][i] = IsEqual();
		eq[26][i].in[0] <== in[i];
		eq[26][i].in[1] <== 45;
		and[49][i] = AND();
		and[49][i].a <== states[i][49];
		and[49][i].b <== eq[26][i].out;
		states[i+1][50] <== and[49][i].out;
		and[50][i] = AND();
		and[50][i].a <== states[i][50];
		and[50][i].b <== eq[2][i].out;
		states[i+1][51] <== and[50][i].out;
		and[51][i] = AND();
		and[51][i].a <== states[i][51];
		and[51][i].b <== eq[7][i].out;
		states[i+1][52] <== and[51][i].out;
		eq[27][i] = IsEqual();
		eq[27][i].in[0] <== in[i];
		eq[27][i].in[1] <== 109;
		and[52][i] = AND();
		and[52][i].a <== states[i][52];
		and[52][i].b <== eq[27][i].out;
		states[i+1][53] <== and[52][i].out;
		and[53][i] = AND();
		and[53][i].a <== states[i][53];
		and[53][i].b <== eq[22][i].out;
		states[i+1][54] <== and[53][i].out;
		and[54][i] = AND();
		and[54][i].a <== states[i][54];
		and[54][i].b <== eq[6][i].out;
		states[i+1][55] <== and[54][i].out;
		and[55][i] = AND();
		and[55][i].a <== states[i][55];
		and[55][i].b <== eq[21][i].out;
		states[i+1][56] <== and[55][i].out;
		and[56][i] = AND();
		and[56][i].a <== states[i][56];
		and[56][i].b <== eq[20][i].out;
		states[i+1][57] <== and[56][i].out;
		and[57][i] = AND();
		and[57][i].a <== states[i][57];
		and[57][i].b <== eq[13][i].out;
		states[i+1][58] <== and[57][i].out;
		eq[28][i] = IsEqual();
		eq[28][i].in[0] <== in[i];
		eq[28][i].in[1] <== 38;
		and[58][i] = AND();
		and[58][i].a <== states[i][58];
		and[58][i].b <== eq[28][i].out;
		states[i+1][59] <== and[58][i].out;
		eq[29][i] = IsEqual();
		eq[29][i].in[0] <== in[i];
		eq[29][i].in[1] <== 35;
		and[59][i] = AND();
		and[59][i].a <== states[i][59];
		and[59][i].b <== eq[29][i].out;
		states[i+1][60] <== and[59][i].out;
		and[60][i] = AND();
		and[60][i].a <== states[i][60];
		and[60][i].b <== eq[23][i].out;
		states[i+1][61] <== and[60][i].out;
		eq[30][i] = IsEqual();
		eq[30][i].in[0] <== in[i];
		eq[30][i].in[1] <== 57;
		and[61][i] = AND();
		and[61][i].a <== states[i][61];
		and[61][i].b <== eq[30][i].out;
		states[i+1][62] <== and[61][i].out;
		eq[31][i] = IsEqual();
		eq[31][i].in[0] <== in[i];
		eq[31][i].in[1] <== 59;
		and[62][i] = AND();
		and[62][i].a <== states[i][62];
		and[62][i].b <== eq[31][i].out;
		states[i+1][63] <== and[62][i].out;
		eq[32][i] = IsEqual();
		eq[32][i].in[0] <== in[i];
		eq[32][i].in[1] <== 80;
		and[63][i] = AND();
		and[63][i].a <== states[i][63];
		and[63][i].b <== eq[32][i].out;
		states[i+1][64] <== and[63][i].out;
		and[64][i] = AND();
		and[64][i].a <== states[i][64];
		and[64][i].b <== eq[3][i].out;
		states[i+1][65] <== and[64][i].out;
		and[65][i] = AND();
		and[65][i].a <== states[i][65];
		and[65][i].b <== eq[12][i].out;
		states[i+1][66] <== and[65][i].out;
		eq[33][i] = IsEqual();
		eq[33][i].in[0] <== in[i];
		eq[33][i].in[1] <== 120;
		and[66][i] = AND();
		and[66][i].a <== states[i][66];
		and[66][i].b <== eq[33][i].out;
		states[i+1][67] <== and[66][i].out;
		and[67][i] = AND();
		and[67][i].a <== states[i][67];
		and[67][i].b <== eq[6][i].out;
		states[i+1][68] <== and[67][i].out;
		and[68][i] = AND();
		and[68][i].a <== states[i][68];
		and[68][i].b <== eq[27][i].out;
		states[i+1][69] <== and[68][i].out;
		and[69][i] = AND();
		and[69][i].a <== states[i][69];
		and[69][i].b <== eq[7][i].out;
		states[i+1][70] <== and[69][i].out;
		and[70][i] = AND();
		and[70][i].a <== states[i][70];
		and[70][i].b <== eq[8][i].out;
		states[i+1][71] <== and[70][i].out;
		eq[34][i] = IsEqual();
		eq[34][i].in[0] <== in[i];
		eq[34][i].in[1] <== 78;
		and[71][i] = AND();
		and[71][i].a <== states[i][71];
		and[71][i].b <== eq[34][i].out;
		states[i+1][72] <== and[71][i].out;
		and[72][i] = AND();
		and[72][i].a <== states[i][72];
		and[72][i].b <== eq[12][i].out;
		states[i+1][73] <== and[72][i].out;
		eq[35][i] = IsEqual();
		eq[35][i].in[0] <== in[i];
		eq[35][i].in[1] <== 118;
		and[73][i] = AND();
		and[73][i].a <== states[i][73];
		and[73][i].b <== eq[35][i].out;
		states[i+1][74] <== and[73][i].out;
		and[74][i] = AND();
		and[74][i].a <== states[i][74];
		and[74][i].b <== eq[7][i].out;
		states[i+1][75] <== and[74][i].out;
		and[75][i] = AND();
		and[75][i].a <== states[i][75];
		and[75][i].b <== eq[28][i].out;
		states[i+1][76] <== and[75][i].out;
		and[76][i] = AND();
		and[76][i].a <== states[i][76];
		and[76][i].b <== eq[29][i].out;
		states[i+1][77] <== and[76][i].out;
		and[77][i] = AND();
		and[77][i].a <== states[i][77];
		and[77][i].b <== eq[23][i].out;
		states[i+1][78] <== and[77][i].out;
		and[78][i] = AND();
		and[78][i].a <== states[i][78];
		and[78][i].b <== eq[30][i].out;
		states[i+1][79] <== and[78][i].out;
		and[79][i] = AND();
		and[79][i].a <== states[i][79];
		and[79][i].b <== eq[31][i].out;
		states[i+1][80] <== and[79][i].out;
		eq[36][i] = IsEqual();
		eq[36][i].in[0] <== in[i];
		eq[36][i].in[1] <== 44;
		and[80][i] = AND();
		and[80][i].a <== states[i][80];
		and[80][i].b <== eq[36][i].out;
		states[i+1][81] <== and[80][i].out;
		eq[37][i] = IsEqual();
		eq[37][i].in[0] <== in[i];
		eq[37][i].in[1] <== 95;
		and[81][i] = AND();
		and[81][i].a <== states[i][81];
		and[81][i].b <== eq[37][i].out;
		states[i+1][82] <== and[81][i].out;
		and[82][i] = AND();
		and[82][i].a <== states[i][82];
		and[82][i].b <== eq[7][i].out;
		states[i+1][83] <== and[82][i].out;
		and[83][i] = AND();
		and[83][i].a <== states[i][83];
		and[83][i].b <== eq[10][i].out;
		states[i+1][84] <== and[83][i].out;
		and[84][i] = AND();
		and[84][i].a <== states[i][84];
		and[84][i].b <== eq[10][i].out;
		states[i+1][85] <== and[84][i].out;
		and[85][i] = AND();
		and[85][i].a <== states[i][85];
		and[85][i].b <== eq[21][i].out;
		states[i+1][86] <== and[85][i].out;
		and[86][i] = AND();
		and[86][i].a <== states[i][86];
		and[86][i].b <== eq[1][i].out;
		states[i+1][87] <== and[86][i].out;
		and[87][i] = AND();
		and[87][i].a <== states[i][87];
		and[87][i].b <== eq[37][i].out;
		states[i+1][88] <== and[87][i].out;
		and[88][i] = AND();
		and[88][i].a <== states[i][88];
		and[88][i].b <== eq[16][i].out;
		states[i+1][89] <== and[88][i].out;
		and[89][i] = AND();
		and[89][i].a <== states[i][89];
		and[89][i].b <== eq[20][i].out;
		states[i+1][90] <== and[89][i].out;
		and[90][i] = AND();
		and[90][i].a <== states[i][90];
		and[90][i].b <== eq[16][i].out;
		states[i+1][91] <== and[90][i].out;
		and[91][i] = AND();
		and[91][i].a <== states[i][91];
		and[91][i].b <== eq[19][i].out;
		states[i+1][92] <== and[91][i].out;
		and[92][i] = AND();
		and[92][i].a <== states[i][92];
		and[92][i].b <== eq[1][i].out;
		states[i+1][93] <== and[92][i].out;
		and[93][i] = AND();
		and[93][i].a <== states[i][93];
		and[93][i].b <== eq[27][i].out;
		states[i+1][94] <== and[93][i].out;
		and[94][i] = AND();
		and[94][i].a <== states[i][94];
		and[94][i].b <== eq[36][i].out;
		states[i+1][95] <== and[94][i].out;
		and[95][i] = AND();
		and[95][i].a <== states[i][95];
		and[95][i].b <== eq[28][i].out;
		states[i+1][96] <== and[95][i].out;
		and[96][i] = AND();
		and[96][i].a <== states[i][96];
		and[96][i].b <== eq[29][i].out;
		states[i+1][97] <== and[96][i].out;
		and[97][i] = AND();
		and[97][i].a <== states[i][97];
		and[97][i].b <== eq[23][i].out;
		states[i+1][98] <== and[97][i].out;
		and[98][i] = AND();
		and[98][i].a <== states[i][98];
		and[98][i].b <== eq[30][i].out;
		states[i+1][99] <== and[98][i].out;
		and[99][i] = AND();
		and[99][i].a <== states[i][99];
		and[99][i].b <== eq[31][i].out;
		states[i+1][100] <== and[99][i].out;
		eq[38][i] = IsEqual();
		eq[38][i].in[0] <== in[i];
		eq[38][i].in[1] <== 72;
		and[100][i] = AND();
		and[100][i].a <== states[i][100];
		and[100][i].b <== eq[38][i].out;
		states[i+1][101] <== and[100][i].out;
		and[101][i] = AND();
		and[101][i].a <== states[i][101];
		and[101][i].b <== eq[1][i].out;
		states[i+1][102] <== and[101][i].out;
		and[102][i] = AND();
		and[102][i].a <== states[i][102];
		and[102][i].b <== eq[21][i].out;
		states[i+1][103] <== and[102][i].out;
		and[103][i] = AND();
		and[103][i].a <== states[i][103];
		and[103][i].b <== eq[35][i].out;
		states[i+1][104] <== and[103][i].out;
		and[104][i] = AND();
		and[104][i].a <== states[i][104];
		and[104][i].b <== eq[1][i].out;
		states[i+1][105] <== and[104][i].out;
		and[105][i] = AND();
		and[105][i].a <== states[i][105];
		and[105][i].b <== eq[19][i].out;
		states[i+1][106] <== and[105][i].out;
		and[106][i] = AND();
		and[106][i].a <== states[i][106];
		and[106][i].b <== eq[6][i].out;
		states[i+1][107] <== and[106][i].out;
		and[107][i] = AND();
		and[107][i].a <== states[i][107];
		and[107][i].b <== eq[5][i].out;
		states[i+1][108] <== and[107][i].out;
		and[108][i] = AND();
		and[108][i].a <== states[i][108];
		and[108][i].b <== eq[7][i].out;
		states[i+1][109] <== and[108][i].out;
		and[109][i] = AND();
		and[109][i].a <== states[i][109];
		and[109][i].b <== eq[8][i].out;
		states[i+1][110] <== and[109][i].out;
		and[110][i] = AND();
		and[110][i].a <== states[i][110];
		and[110][i].b <== eq[34][i].out;
		states[i+1][111] <== and[110][i].out;
		and[111][i] = AND();
		and[111][i].a <== states[i][111];
		and[111][i].b <== eq[1][i].out;
		states[i+1][112] <== and[111][i].out;
		eq[39][i] = IsEqual();
		eq[39][i].in[0] <== in[i];
		eq[39][i].in[1] <== 117;
		and[112][i] = AND();
		and[112][i].a <== states[i][112];
		and[112][i].b <== eq[39][i].out;
		states[i+1][113] <== and[112][i].out;
		and[113][i] = AND();
		and[113][i].a <== states[i][113];
		and[113][i].b <== eq[1][i].out;
		states[i+1][114] <== and[113][i].out;
		and[114][i] = AND();
		and[114][i].a <== states[i][114];
		and[114][i].b <== eq[28][i].out;
		states[i+1][115] <== and[114][i].out;
		and[115][i] = AND();
		and[115][i].a <== states[i][115];
		and[115][i].b <== eq[29][i].out;
		states[i+1][116] <== and[115][i].out;
		and[116][i] = AND();
		and[116][i].a <== states[i][116];
		and[116][i].b <== eq[23][i].out;
		states[i+1][117] <== and[116][i].out;
		and[117][i] = AND();
		and[117][i].a <== states[i][117];
		and[117][i].b <== eq[30][i].out;
		states[i+1][118] <== and[117][i].out;
		and[118][i] = AND();
		and[118][i].a <== states[i][118];
		and[118][i].b <== eq[31][i].out;
		states[i+1][119] <== and[118][i].out;
		and[119][i] = AND();
		and[119][i].a <== states[i][119];
		and[119][i].b <== eq[36][i].out;
		states[i+1][120] <== and[119][i].out;
		and[120][i] = AND();
		and[120][i].a <== states[i][120];
		and[120][i].b <== eq[38][i].out;
		states[i+1][121] <== and[120][i].out;
		and[121][i] = AND();
		and[121][i].a <== states[i][121];
		and[121][i].b <== eq[1][i].out;
		states[i+1][122] <== and[121][i].out;
		and[122][i] = AND();
		and[122][i].a <== states[i][122];
		and[122][i].b <== eq[21][i].out;
		states[i+1][123] <== and[122][i].out;
		and[123][i] = AND();
		and[123][i].a <== states[i][123];
		and[123][i].b <== eq[35][i].out;
		states[i+1][124] <== and[123][i].out;
		and[124][i] = AND();
		and[124][i].a <== states[i][124];
		and[124][i].b <== eq[1][i].out;
		states[i+1][125] <== and[124][i].out;
		and[125][i] = AND();
		and[125][i].a <== states[i][125];
		and[125][i].b <== eq[19][i].out;
		states[i+1][126] <== and[125][i].out;
		and[126][i] = AND();
		and[126][i].a <== states[i][126];
		and[126][i].b <== eq[6][i].out;
		states[i+1][127] <== and[126][i].out;
		and[127][i] = AND();
		and[127][i].a <== states[i][127];
		and[127][i].b <== eq[5][i].out;
		states[i+1][128] <== and[127][i].out;
		and[128][i] = AND();
		and[128][i].a <== states[i][128];
		and[128][i].b <== eq[7][i].out;
		states[i+1][129] <== and[128][i].out;
		and[129][i] = AND();
		and[129][i].a <== states[i][129];
		and[129][i].b <== eq[22][i].out;
		states[i+1][130] <== and[129][i].out;
		and[130][i] = AND();
		and[130][i].a <== states[i][130];
		and[130][i].b <== eq[36][i].out;
		states[i+1][131] <== and[130][i].out;
		and[131][i] = AND();
		and[131][i].a <== states[i][131];
		and[131][i].b <== eq[0][i].out;
		states[i+1][132] <== and[131][i].out;
		and[132][i] = AND();
		and[132][i].a <== states[i][132];
		and[132][i].b <== eq[12][i].out;
		states[i+1][133] <== and[132][i].out;
		and[133][i] = AND();
		and[133][i].a <== states[i][133];
		and[133][i].b <== eq[18][i].out;
		states[i+1][134] <== and[133][i].out;
		and[134][i] = AND();
		and[134][i].a <== states[i][134];
		and[134][i].b <== eq[12][i].out;
		states[i+1][135] <== and[134][i].out;
		and[135][i] = AND();
		and[135][i].a <== states[i][135];
		and[135][i].b <== eq[19][i].out;
		states[i+1][136] <== and[135][i].out;
		and[136][i] = AND();
		and[136][i].a <== states[i][136];
		and[136][i].b <== eq[12][i].out;
		states[i+1][137] <== and[136][i].out;
		and[137][i] = AND();
		and[137][i].a <== states[i][137];
		and[137][i].b <== eq[36][i].out;
		states[i+1][138] <== and[137][i].out;
		eq[40][i] = IsEqual();
		eq[40][i].in[0] <== in[i];
		eq[40][i].in[1] <== 65;
		and[138][i] = AND();
		and[138][i].a <== states[i][138];
		and[138][i].b <== eq[40][i].out;
		states[i+1][139] <== and[138][i].out;
		and[139][i] = AND();
		and[139][i].a <== states[i][139];
		and[139][i].b <== eq[3][i].out;
		states[i+1][140] <== and[139][i].out;
		and[140][i] = AND();
		and[140][i].a <== states[i][140];
		and[140][i].b <== eq[6][i].out;
		states[i+1][141] <== and[140][i].out;
		and[141][i] = AND();
		and[141][i].a <== states[i][141];
		and[141][i].b <== eq[7][i].out;
		states[i+1][142] <== and[141][i].out;
		and[142][i] = AND();
		and[142][i].a <== states[i][142];
		and[142][i].b <== eq[21][i].out;
		states[i+1][143] <== and[142][i].out;
		and[143][i] = AND();
		and[143][i].a <== states[i][143];
		and[143][i].b <== eq[36][i].out;
		states[i+1][144] <== and[143][i].out;
		and[144][i] = AND();
		and[144][i].a <== states[i][144];
		and[144][i].b <== eq[16][i].out;
		states[i+1][145] <== and[144][i].out;
		and[145][i] = AND();
		and[145][i].a <== states[i][145];
		and[145][i].b <== eq[7][i].out;
		states[i+1][146] <== and[145][i].out;
		and[146][i] = AND();
		and[146][i].a <== states[i][146];
		and[146][i].b <== eq[4][i].out;
		states[i+1][147] <== and[146][i].out;
		and[147][i] = AND();
		and[147][i].a <== states[i][147];
		and[147][i].b <== eq[16][i].out;
		states[i+1][148] <== and[147][i].out;
		and[148][i] = AND();
		and[148][i].a <== states[i][148];
		and[148][i].b <== eq[26][i].out;
		states[i+1][149] <== and[148][i].out;
		and[149][i] = AND();
		and[149][i].a <== states[i][149];
		and[149][i].b <== eq[16][i].out;
		states[i+1][150] <== and[149][i].out;
		and[150][i] = AND();
		and[150][i].a <== states[i][150];
		and[150][i].b <== eq[1][i].out;
		states[i+1][151] <== and[150][i].out;
		and[151][i] = AND();
		and[151][i].a <== states[i][151];
		and[151][i].b <== eq[3][i].out;
		states[i+1][152] <== and[151][i].out;
		and[152][i] = AND();
		and[152][i].a <== states[i][152];
		and[152][i].b <== eq[6][i].out;
		states[i+1][153] <== and[152][i].out;
		and[153][i] = AND();
		and[153][i].a <== states[i][153];
		and[153][i].b <== eq[2][i].out;
		states[i+1][154] <== and[153][i].out;
		and[154][i] = AND();
		and[154][i].a <== states[i][154];
		and[154][i].b <== eq[31][i].out;
		states[i+1][155] <== and[154][i].out;
		and[155][i] = AND();
		and[155][i].a <== states[i][155];
		and[155][i].b <== eq[2][i].out;
		states[i+1][156] <== and[155][i].out;
		and[156][i] = AND();
		and[156][i].a <== states[i][156];
		and[156][i].b <== eq[12][i].out;
		states[i+1][157] <== and[156][i].out;
		and[157][i] = AND();
		and[157][i].a <== states[i][157];
		and[157][i].b <== eq[4][i].out;
		states[i+1][158] <== and[157][i].out;
		and[158][i] = AND();
		and[158][i].a <== states[i][158];
		and[158][i].b <== eq[19][i].out;
		states[i+1][159] <== and[158][i].out;
		and[159][i] = AND();
		and[159][i].a <== states[i][159];
		and[159][i].b <== eq[26][i].out;
		states[i+1][160] <== and[159][i].out;
		and[160][i] = AND();
		and[160][i].a <== states[i][160];
		and[160][i].b <== eq[16][i].out;
		states[i+1][161] <== and[160][i].out;
		and[161][i] = AND();
		and[161][i].a <== states[i][161];
		and[161][i].b <== eq[6][i].out;
		states[i+1][162] <== and[161][i].out;
		eq[41][i] = IsEqual();
		eq[41][i].in[0] <== in[i];
		eq[41][i].in[1] <== 122;
		and[162][i] = AND();
		and[162][i].a <== states[i][162];
		and[162][i].b <== eq[41][i].out;
		states[i+1][163] <== and[162][i].out;
		and[163][i] = AND();
		and[163][i].a <== states[i][163];
		and[163][i].b <== eq[1][i].out;
		states[i+1][164] <== and[163][i].out;
		and[164][i] = AND();
		and[164][i].a <== states[i][164];
		and[164][i].b <== eq[13][i].out;
		states[i+1][165] <== and[164][i].out;
		eq[42][i] = IsEqual();
		eq[42][i].in[0] <== in[i];
		eq[42][i].in[1] <== 49;
		and[165][i] = AND();
		and[165][i].a <== states[i][165];
		and[165][i].b <== eq[42][i].out;
		states[i+1][166] <== and[165][i].out;
		eq[43][i] = IsEqual();
		eq[43][i].in[0] <== in[i];
		eq[43][i].in[1] <== 52;
		and[166][i] = AND();
		and[166][i].a <== states[i][166];
		and[166][i].b <== eq[43][i].out;
		states[i+1][167] <== and[166][i].out;
		and[167][i] = AND();
		and[167][i].a <== states[i][167];
		and[167][i].b <== eq[10][i].out;
		states[i+1][168] <== and[167][i].out;
		and[168][i] = AND();
		and[168][i].a <== states[i][168];
		and[168][i].b <== eq[33][i].out;
		states[i+1][169] <== and[168][i].out;
		and[169][i] = AND();
		and[169][i].a <== states[i][169];
		and[169][i].b <== eq[31][i].out;
		states[i+1][170] <== and[169][i].out;
		and[170][i] = AND();
		and[170][i].a <== states[i][170];
		and[170][i].b <== eq[5][i].out;
		states[i+1][171] <== and[170][i].out;
		and[171][i] = AND();
		and[171][i].a <== states[i][171];
		and[171][i].b <== eq[12][i].out;
		states[i+1][172] <== and[171][i].out;
		and[172][i] = AND();
		and[172][i].a <== states[i][172];
		and[172][i].b <== eq[21][i].out;
		states[i+1][173] <== and[172][i].out;
		and[173][i] = AND();
		and[173][i].a <== states[i][173];
		and[173][i].b <== eq[12][i].out;
		states[i+1][174] <== and[173][i].out;
		and[174][i] = AND();
		and[174][i].a <== states[i][174];
		and[174][i].b <== eq[3][i].out;
		states[i+1][175] <== and[174][i].out;
		and[175][i] = AND();
		and[175][i].a <== states[i][175];
		and[175][i].b <== eq[13][i].out;
		states[i+1][176] <== and[175][i].out;
		and[176][i] = AND();
		and[176][i].a <== states[i][176];
		and[176][i].b <== eq[3][i].out;
		states[i+1][177] <== and[176][i].out;
		and[177][i] = AND();
		and[177][i].a <== states[i][177];
		and[177][i].b <== eq[11][i].out;
		states[i+1][178] <== and[177][i].out;
		and[178][i] = AND();
		and[178][i].a <== states[i][178];
		and[178][i].b <== eq[18][i].out;
		states[i+1][179] <== and[178][i].out;
		and[179][i] = AND();
		and[179][i].a <== states[i][179];
		and[179][i].b <== eq[7][i].out;
		states[i+1][180] <== and[179][i].out;
		eq[44][i] = IsEqual();
		eq[44][i].in[0] <== in[i];
		eq[44][i].in[1] <== 48;
		and[180][i] = AND();
		and[180][i].a <== states[i][180];
		and[180][i].b <== eq[44][i].out;
		states[i+1][181] <== and[180][i].out;
		and[181][i] = AND();
		and[181][i].a <== states[i][181];
		and[181][i].b <== eq[36][i].out;
		states[i+1][182] <== and[181][i].out;
		and[182][i] = AND();
		and[182][i].a <== states[i][182];
		and[182][i].b <== eq[44][i].out;
		states[i+1][183] <== and[182][i].out;
		and[183][i] = AND();
		and[183][i].a <== states[i][183];
		and[183][i].b <== eq[36][i].out;
		states[i+1][184] <== and[183][i].out;
		and[184][i] = AND();
		and[184][i].a <== states[i][184];
		and[184][i].b <== eq[44][i].out;
		states[i+1][185] <== and[184][i].out;
		and[185][i] = AND();
		and[185][i].a <== states[i][185];
		and[185][i].b <== eq[36][i].out;
		states[i+1][186] <== and[185][i].out;
		and[186][i] = AND();
		and[186][i].a <== states[i][186];
		and[186][i].b <== eq[44][i].out;
		states[i+1][187] <== and[186][i].out;
		lt[0][i] = LessEqThan(8);
		lt[0][i].in[0] <== 11;
		lt[0][i].in[1] <== in[i];
		lt[1][i] = LessEqThan(8);
		lt[1][i].in[0] <== in[i];
		lt[1][i].in[1] <== 127;
		and[187][i] = AND();
		and[187][i].a <== lt[0][i].out;
		and[187][i].b <== lt[1][i].out;
		eq[45][i] = IsEqual();
		eq[45][i].in[0] <== in[i];
		eq[45][i].in[1] <== 1;
		eq[46][i] = IsEqual();
		eq[46][i].in[0] <== in[i];
		eq[46][i].in[1] <== 2;
		eq[47][i] = IsEqual();
		eq[47][i].in[0] <== in[i];
		eq[47][i].in[1] <== 3;
		eq[48][i] = IsEqual();
		eq[48][i].in[0] <== in[i];
		eq[48][i].in[1] <== 4;
		eq[49][i] = IsEqual();
		eq[49][i].in[0] <== in[i];
		eq[49][i].in[1] <== 5;
		eq[50][i] = IsEqual();
		eq[50][i].in[0] <== in[i];
		eq[50][i].in[1] <== 6;
		eq[51][i] = IsEqual();
		eq[51][i].in[0] <== in[i];
		eq[51][i].in[1] <== 7;
		eq[52][i] = IsEqual();
		eq[52][i].in[0] <== in[i];
		eq[52][i].in[1] <== 8;
		eq[53][i] = IsEqual();
		eq[53][i].in[0] <== in[i];
		eq[53][i].in[1] <== 9;
		and[188][i] = AND();
		and[188][i].a <== states[i][187];
		multi_or[0][i] = MultiOR(10);
		multi_or[0][i].in[0] <== and[187][i].out;
		multi_or[0][i].in[1] <== eq[45][i].out;
		multi_or[0][i].in[2] <== eq[46][i].out;
		multi_or[0][i].in[3] <== eq[47][i].out;
		multi_or[0][i].in[4] <== eq[48][i].out;
		multi_or[0][i].in[5] <== eq[49][i].out;
		multi_or[0][i].in[6] <== eq[50][i].out;
		multi_or[0][i].in[7] <== eq[51][i].out;
		multi_or[0][i].in[8] <== eq[52][i].out;
		multi_or[0][i].in[9] <== eq[53][i].out;
		and[188][i].b <== multi_or[0][i].out;
		lt[2][i] = LessEqThan(8);
		lt[2][i].in[0] <== 128;
		lt[2][i].in[1] <== in[i];
		lt[3][i] = LessEqThan(8);
		lt[3][i].in[0] <== in[i];
		lt[3][i].in[1] <== 191;
		and[189][i] = AND();
		and[189][i].a <== lt[2][i].out;
		and[189][i].b <== lt[3][i].out;
		and[190][i] = AND();
		and[190][i].a <== states[i][189];
		and[190][i].b <== and[189][i].out;
		multi_or[1][i] = MultiOR(2);
		multi_or[1][i].in[0] <== and[188][i].out;
		multi_or[1][i].in[1] <== and[190][i].out;
		states[i+1][188] <== multi_or[1][i].out;
		lt[4][i] = LessEqThan(8);
		lt[4][i].in[0] <== 194;
		lt[4][i].in[1] <== in[i];
		lt[5][i] = LessEqThan(8);
		lt[5][i].in[0] <== in[i];
		lt[5][i].in[1] <== 223;
		and[191][i] = AND();
		and[191][i].a <== lt[4][i].out;
		and[191][i].b <== lt[5][i].out;
		and[192][i] = AND();
		and[192][i].a <== states[i][187];
		and[192][i].b <== and[191][i].out;
		lt[6][i] = LessEqThan(8);
		lt[6][i].in[0] <== 160;
		lt[6][i].in[1] <== in[i];
		lt[7][i] = LessEqThan(8);
		lt[7][i].in[0] <== in[i];
		lt[7][i].in[1] <== 191;
		and[193][i] = AND();
		and[193][i].a <== lt[6][i].out;
		and[193][i].b <== lt[7][i].out;
		and[194][i] = AND();
		and[194][i].a <== states[i][190];
		and[194][i].b <== and[193][i].out;
		and[195][i] = AND();
		and[195][i].a <== states[i][191];
		and[195][i].b <== and[189][i].out;
		lt[8][i] = LessEqThan(8);
		lt[8][i].in[0] <== 128;
		lt[8][i].in[1] <== in[i];
		lt[9][i] = LessEqThan(8);
		lt[9][i].in[0] <== in[i];
		lt[9][i].in[1] <== 159;
		and[196][i] = AND();
		and[196][i].a <== lt[8][i].out;
		and[196][i].b <== lt[9][i].out;
		and[197][i] = AND();
		and[197][i].a <== states[i][192];
		and[197][i].b <== and[196][i].out;
		multi_or[2][i] = MultiOR(4);
		multi_or[2][i].in[0] <== and[192][i].out;
		multi_or[2][i].in[1] <== and[194][i].out;
		multi_or[2][i].in[2] <== and[195][i].out;
		multi_or[2][i].in[3] <== and[197][i].out;
		states[i+1][189] <== multi_or[2][i].out;
		eq[54][i] = IsEqual();
		eq[54][i].in[0] <== in[i];
		eq[54][i].in[1] <== 224;
		and[198][i] = AND();
		and[198][i].a <== states[i][187];
		and[198][i].b <== eq[54][i].out;
		states[i+1][190] <== and[198][i].out;
		eq[55][i] = IsEqual();
		eq[55][i].in[0] <== in[i];
		eq[55][i].in[1] <== 225;
		eq[56][i] = IsEqual();
		eq[56][i].in[0] <== in[i];
		eq[56][i].in[1] <== 226;
		eq[57][i] = IsEqual();
		eq[57][i].in[0] <== in[i];
		eq[57][i].in[1] <== 227;
		eq[58][i] = IsEqual();
		eq[58][i].in[0] <== in[i];
		eq[58][i].in[1] <== 228;
		eq[59][i] = IsEqual();
		eq[59][i].in[0] <== in[i];
		eq[59][i].in[1] <== 229;
		eq[60][i] = IsEqual();
		eq[60][i].in[0] <== in[i];
		eq[60][i].in[1] <== 230;
		eq[61][i] = IsEqual();
		eq[61][i].in[0] <== in[i];
		eq[61][i].in[1] <== 231;
		eq[62][i] = IsEqual();
		eq[62][i].in[0] <== in[i];
		eq[62][i].in[1] <== 232;
		eq[63][i] = IsEqual();
		eq[63][i].in[0] <== in[i];
		eq[63][i].in[1] <== 233;
		eq[64][i] = IsEqual();
		eq[64][i].in[0] <== in[i];
		eq[64][i].in[1] <== 234;
		eq[65][i] = IsEqual();
		eq[65][i].in[0] <== in[i];
		eq[65][i].in[1] <== 235;
		eq[66][i] = IsEqual();
		eq[66][i].in[0] <== in[i];
		eq[66][i].in[1] <== 236;
		eq[67][i] = IsEqual();
		eq[67][i].in[0] <== in[i];
		eq[67][i].in[1] <== 238;
		eq[68][i] = IsEqual();
		eq[68][i].in[0] <== in[i];
		eq[68][i].in[1] <== 239;
		and[199][i] = AND();
		and[199][i].a <== states[i][187];
		multi_or[3][i] = MultiOR(14);
		multi_or[3][i].in[0] <== eq[55][i].out;
		multi_or[3][i].in[1] <== eq[56][i].out;
		multi_or[3][i].in[2] <== eq[57][i].out;
		multi_or[3][i].in[3] <== eq[58][i].out;
		multi_or[3][i].in[4] <== eq[59][i].out;
		multi_or[3][i].in[5] <== eq[60][i].out;
		multi_or[3][i].in[6] <== eq[61][i].out;
		multi_or[3][i].in[7] <== eq[62][i].out;
		multi_or[3][i].in[8] <== eq[63][i].out;
		multi_or[3][i].in[9] <== eq[64][i].out;
		multi_or[3][i].in[10] <== eq[65][i].out;
		multi_or[3][i].in[11] <== eq[66][i].out;
		multi_or[3][i].in[12] <== eq[67][i].out;
		multi_or[3][i].in[13] <== eq[68][i].out;
		and[199][i].b <== multi_or[3][i].out;
		lt[10][i] = LessEqThan(8);
		lt[10][i].in[0] <== 144;
		lt[10][i].in[1] <== in[i];
		lt[11][i] = LessEqThan(8);
		lt[11][i].in[0] <== in[i];
		lt[11][i].in[1] <== 191;
		and[200][i] = AND();
		and[200][i].a <== lt[10][i].out;
		and[200][i].b <== lt[11][i].out;
		and[201][i] = AND();
		and[201][i].a <== states[i][193];
		and[201][i].b <== and[200][i].out;
		and[202][i] = AND();
		and[202][i].a <== states[i][194];
		and[202][i].b <== and[189][i].out;
		eq[69][i] = IsEqual();
		eq[69][i].in[0] <== in[i];
		eq[69][i].in[1] <== 128;
		eq[70][i] = IsEqual();
		eq[70][i].in[0] <== in[i];
		eq[70][i].in[1] <== 129;
		eq[71][i] = IsEqual();
		eq[71][i].in[0] <== in[i];
		eq[71][i].in[1] <== 130;
		eq[72][i] = IsEqual();
		eq[72][i].in[0] <== in[i];
		eq[72][i].in[1] <== 131;
		eq[73][i] = IsEqual();
		eq[73][i].in[0] <== in[i];
		eq[73][i].in[1] <== 132;
		eq[74][i] = IsEqual();
		eq[74][i].in[0] <== in[i];
		eq[74][i].in[1] <== 133;
		eq[75][i] = IsEqual();
		eq[75][i].in[0] <== in[i];
		eq[75][i].in[1] <== 134;
		eq[76][i] = IsEqual();
		eq[76][i].in[0] <== in[i];
		eq[76][i].in[1] <== 135;
		eq[77][i] = IsEqual();
		eq[77][i].in[0] <== in[i];
		eq[77][i].in[1] <== 136;
		eq[78][i] = IsEqual();
		eq[78][i].in[0] <== in[i];
		eq[78][i].in[1] <== 137;
		eq[79][i] = IsEqual();
		eq[79][i].in[0] <== in[i];
		eq[79][i].in[1] <== 138;
		eq[80][i] = IsEqual();
		eq[80][i].in[0] <== in[i];
		eq[80][i].in[1] <== 139;
		eq[81][i] = IsEqual();
		eq[81][i].in[0] <== in[i];
		eq[81][i].in[1] <== 140;
		eq[82][i] = IsEqual();
		eq[82][i].in[0] <== in[i];
		eq[82][i].in[1] <== 141;
		eq[83][i] = IsEqual();
		eq[83][i].in[0] <== in[i];
		eq[83][i].in[1] <== 142;
		eq[84][i] = IsEqual();
		eq[84][i].in[0] <== in[i];
		eq[84][i].in[1] <== 143;
		and[203][i] = AND();
		and[203][i].a <== states[i][195];
		multi_or[4][i] = MultiOR(16);
		multi_or[4][i].in[0] <== eq[69][i].out;
		multi_or[4][i].in[1] <== eq[70][i].out;
		multi_or[4][i].in[2] <== eq[71][i].out;
		multi_or[4][i].in[3] <== eq[72][i].out;
		multi_or[4][i].in[4] <== eq[73][i].out;
		multi_or[4][i].in[5] <== eq[74][i].out;
		multi_or[4][i].in[6] <== eq[75][i].out;
		multi_or[4][i].in[7] <== eq[76][i].out;
		multi_or[4][i].in[8] <== eq[77][i].out;
		multi_or[4][i].in[9] <== eq[78][i].out;
		multi_or[4][i].in[10] <== eq[79][i].out;
		multi_or[4][i].in[11] <== eq[80][i].out;
		multi_or[4][i].in[12] <== eq[81][i].out;
		multi_or[4][i].in[13] <== eq[82][i].out;
		multi_or[4][i].in[14] <== eq[83][i].out;
		multi_or[4][i].in[15] <== eq[84][i].out;
		and[203][i].b <== multi_or[4][i].out;
		multi_or[5][i] = MultiOR(4);
		multi_or[5][i].in[0] <== and[199][i].out;
		multi_or[5][i].in[1] <== and[201][i].out;
		multi_or[5][i].in[2] <== and[202][i].out;
		multi_or[5][i].in[3] <== and[203][i].out;
		states[i+1][191] <== multi_or[5][i].out;
		eq[85][i] = IsEqual();
		eq[85][i].in[0] <== in[i];
		eq[85][i].in[1] <== 237;
		and[204][i] = AND();
		and[204][i].a <== states[i][187];
		and[204][i].b <== eq[85][i].out;
		states[i+1][192] <== and[204][i].out;
		eq[86][i] = IsEqual();
		eq[86][i].in[0] <== in[i];
		eq[86][i].in[1] <== 240;
		and[205][i] = AND();
		and[205][i].a <== states[i][187];
		and[205][i].b <== eq[86][i].out;
		states[i+1][193] <== and[205][i].out;
		eq[87][i] = IsEqual();
		eq[87][i].in[0] <== in[i];
		eq[87][i].in[1] <== 241;
		eq[88][i] = IsEqual();
		eq[88][i].in[0] <== in[i];
		eq[88][i].in[1] <== 242;
		eq[89][i] = IsEqual();
		eq[89][i].in[0] <== in[i];
		eq[89][i].in[1] <== 243;
		and[206][i] = AND();
		and[206][i].a <== states[i][187];
		multi_or[6][i] = MultiOR(3);
		multi_or[6][i].in[0] <== eq[87][i].out;
		multi_or[6][i].in[1] <== eq[88][i].out;
		multi_or[6][i].in[2] <== eq[89][i].out;
		and[206][i].b <== multi_or[6][i].out;
		states[i+1][194] <== and[206][i].out;
		eq[90][i] = IsEqual();
		eq[90][i].in[0] <== in[i];
		eq[90][i].in[1] <== 244;
		and[207][i] = AND();
		and[207][i].a <== states[i][187];
		and[207][i].b <== eq[90][i].out;
		states[i+1][195] <== and[207][i].out;
		eq[91][i] = IsEqual();
		eq[91][i].in[0] <== in[i];
		eq[91][i].in[1] <== 56;
		and[208][i] = AND();
		and[208][i].a <== states[i][188];
		and[208][i].b <== eq[91][i].out;
		states[i+1][196] <== and[208][i].out;
		and[209][i] = AND();
		and[209][i].a <== states[i][196];
		and[209][i].b <== eq[31][i].out;
		states[i+1][197] <== and[209][i].out;
		and[210][i] = AND();
		and[210][i].a <== states[i][197];
		and[210][i].b <== eq[2][i].out;
		states[i+1][198] <== and[210][i].out;
		and[211][i] = AND();
		and[211][i].a <== states[i][198];
		and[211][i].b <== eq[12][i].out;
		states[i+1][199] <== and[211][i].out;
		and[212][i] = AND();
		and[212][i].a <== states[i][199];
		and[212][i].b <== eq[4][i].out;
		states[i+1][200] <== and[212][i].out;
		and[213][i] = AND();
		and[213][i].a <== states[i][200];
		and[213][i].b <== eq[19][i].out;
		states[i+1][201] <== and[213][i].out;
		and[214][i] = AND();
		and[214][i].a <== states[i][201];
		and[214][i].b <== eq[26][i].out;
		states[i+1][202] <== and[214][i].out;
		eq[92][i] = IsEqual();
		eq[92][i].in[0] <== in[i];
		eq[92][i].in[1] <== 119;
		and[215][i] = AND();
		and[215][i].a <== states[i][202];
		and[215][i].b <== eq[92][i].out;
		states[i+1][203] <== and[215][i].out;
		and[216][i] = AND();
		and[216][i].a <== states[i][203];
		and[216][i].b <== eq[1][i].out;
		states[i+1][204] <== and[216][i].out;
		and[217][i] = AND();
		and[217][i].a <== states[i][204];
		and[217][i].b <== eq[6][i].out;
		states[i+1][205] <== and[217][i].out;
		and[218][i] = AND();
		and[218][i].a <== states[i][205];
		and[218][i].b <== eq[11][i].out;
		states[i+1][206] <== and[218][i].out;
		eq[93][i] = IsEqual();
		eq[93][i].in[0] <== in[i];
		eq[93][i].in[1] <== 104;
		and[219][i] = AND();
		and[219][i].a <== states[i][206];
		and[219][i].b <== eq[93][i].out;
		states[i+1][207] <== and[219][i].out;
		and[220][i] = AND();
		and[220][i].a <== states[i][207];
		and[220][i].b <== eq[19][i].out;
		states[i+1][208] <== and[220][i].out;
		and[221][i] = AND();
		and[221][i].a <== states[i][208];
		and[221][i].b <== eq[13][i].out;
		states[i+1][209] <== and[221][i].out;
		and[222][i] = AND();
		and[222][i].a <== states[i][209];
		and[222][i].b <== eq[4][i].out;
		states[i+1][210] <== and[222][i].out;
		and[223][i] = AND();
		and[223][i].a <== states[i][210];
		and[223][i].b <== eq[22][i].out;
		states[i+1][211] <== and[223][i].out;
		and[224][i] = AND();
		and[224][i].a <== states[i][211];
		and[224][i].b <== eq[12][i].out;
		states[i+1][212] <== and[224][i].out;
		and[225][i] = AND();
		and[225][i].a <== states[i][212];
		and[225][i].b <== eq[3][i].out;
		states[i+1][213] <== and[225][i].out;
		and[226][i] = AND();
		and[226][i].a <== states[i][213];
		and[226][i].b <== eq[27][i].out;
		states[i+1][214] <== and[226][i].out;
		and[227][i] = AND();
		and[227][i].a <== states[i][214];
		and[227][i].b <== eq[7][i].out;
		states[i+1][215] <== and[227][i].out;
		and[228][i] = AND();
		and[228][i].a <== states[i][215];
		and[228][i].b <== eq[21][i].out;
		states[i+1][216] <== and[228][i].out;
		and[229][i] = AND();
		and[229][i].a <== states[i][216];
		and[229][i].b <== eq[31][i].out;
		states[i+1][217] <== and[229][i].out;
		and[230][i] = AND();
		and[230][i].a <== states[i][217];
		and[230][i].b <== eq[21][i].out;
		states[i+1][218] <== and[230][i].out;
		and[231][i] = AND();
		and[231][i].a <== states[i][218];
		and[231][i].b <== eq[6][i].out;
		states[i+1][219] <== and[231][i].out;
		and[232][i] = AND();
		and[232][i].a <== states[i][219];
		and[232][i].b <== eq[4][i].out;
		states[i+1][220] <== and[232][i].out;
		and[233][i] = AND();
		and[233][i].a <== states[i][220];
		and[233][i].b <== eq[1][i].out;
		states[i+1][221] <== and[233][i].out;
		and[234][i] = AND();
		and[234][i].a <== states[i][221];
		and[234][i].b <== eq[26][i].out;
		states[i+1][222] <== and[234][i].out;
		and[235][i] = AND();
		and[235][i].a <== states[i][222];
		and[235][i].b <== eq[93][i].out;
		states[i+1][223] <== and[235][i].out;
		and[236][i] = AND();
		and[236][i].a <== states[i][223];
		and[236][i].b <== eq[1][i].out;
		states[i+1][224] <== and[236][i].out;
		and[237][i] = AND();
		and[237][i].a <== states[i][224];
		and[237][i].b <== eq[6][i].out;
		states[i+1][225] <== and[237][i].out;
		and[238][i] = AND();
		and[238][i].a <== states[i][225];
		and[238][i].b <== eq[11][i].out;
		states[i+1][226] <== and[238][i].out;
		and[239][i] = AND();
		and[239][i].a <== states[i][226];
		and[239][i].b <== eq[93][i].out;
		states[i+1][227] <== and[239][i].out;
		and[240][i] = AND();
		and[240][i].a <== states[i][227];
		and[240][i].b <== eq[19][i].out;
		states[i+1][228] <== and[240][i].out;
		and[241][i] = AND();
		and[241][i].a <== states[i][228];
		and[241][i].b <== eq[13][i].out;
		states[i+1][229] <== and[241][i].out;
		and[242][i] = AND();
		and[242][i].a <== states[i][229];
		and[242][i].b <== eq[42][i].out;
		states[i+1][230] <== and[242][i].out;
		and[243][i] = AND();
		and[243][i].a <== states[i][230];
		and[243][i].b <== multi_or[0][i].out;
		and[244][i] = AND();
		and[244][i].a <== states[i][232];
		and[244][i].b <== and[189][i].out;
		multi_or[7][i] = MultiOR(2);
		multi_or[7][i].in[0] <== and[243][i].out;
		multi_or[7][i].in[1] <== and[244][i].out;
		states[i+1][231] <== multi_or[7][i].out;
		and[245][i] = AND();
		and[245][i].a <== states[i][230];
		and[245][i].b <== and[191][i].out;
		and[246][i] = AND();
		and[246][i].a <== states[i][233];
		and[246][i].b <== and[193][i].out;
		and[247][i] = AND();
		and[247][i].a <== states[i][234];
		and[247][i].b <== and[189][i].out;
		and[248][i] = AND();
		and[248][i].a <== states[i][235];
		and[248][i].b <== and[196][i].out;
		multi_or[8][i] = MultiOR(4);
		multi_or[8][i].in[0] <== and[245][i].out;
		multi_or[8][i].in[1] <== and[246][i].out;
		multi_or[8][i].in[2] <== and[247][i].out;
		multi_or[8][i].in[3] <== and[248][i].out;
		states[i+1][232] <== multi_or[8][i].out;
		and[249][i] = AND();
		and[249][i].a <== states[i][230];
		and[249][i].b <== eq[54][i].out;
		states[i+1][233] <== and[249][i].out;
		and[250][i] = AND();
		and[250][i].a <== states[i][230];
		and[250][i].b <== multi_or[3][i].out;
		and[251][i] = AND();
		and[251][i].a <== states[i][236];
		and[251][i].b <== and[200][i].out;
		and[252][i] = AND();
		and[252][i].a <== states[i][237];
		and[252][i].b <== and[189][i].out;
		and[253][i] = AND();
		and[253][i].a <== states[i][238];
		and[253][i].b <== multi_or[4][i].out;
		multi_or[9][i] = MultiOR(4);
		multi_or[9][i].in[0] <== and[250][i].out;
		multi_or[9][i].in[1] <== and[251][i].out;
		multi_or[9][i].in[2] <== and[252][i].out;
		multi_or[9][i].in[3] <== and[253][i].out;
		states[i+1][234] <== multi_or[9][i].out;
		and[254][i] = AND();
		and[254][i].a <== states[i][230];
		and[254][i].b <== eq[85][i].out;
		states[i+1][235] <== and[254][i].out;
		and[255][i] = AND();
		and[255][i].a <== states[i][230];
		and[255][i].b <== eq[86][i].out;
		states[i+1][236] <== and[255][i].out;
		and[256][i] = AND();
		and[256][i].a <== states[i][230];
		and[256][i].b <== multi_or[6][i].out;
		states[i+1][237] <== and[256][i].out;
		and[257][i] = AND();
		and[257][i].a <== states[i][230];
		and[257][i].b <== eq[90][i].out;
		states[i+1][238] <== and[257][i].out;
		and[258][i] = AND();
		and[258][i].a <== states[i][231];
		and[258][i].b <== eq[43][i].out;
		states[i+1][239] <== and[258][i].out;
		and[259][i] = AND();
		and[259][i].a <== states[i][239];
		and[259][i].b <== eq[23][i].out;
		states[i+1][240] <== and[259][i].out;
		and[260][i] = AND();
		and[260][i].a <== states[i][240];
		and[260][i].b <== eq[31][i].out;
		states[i+1][241] <== and[260][i].out;
		and[261][i] = AND();
		and[261][i].a <== states[i][241];
		and[261][i].b <== eq[27][i].out;
		states[i+1][242] <== and[261][i].out;
		and[262][i] = AND();
		and[262][i].a <== states[i][242];
		and[262][i].b <== eq[7][i].out;
		states[i+1][243] <== and[262][i].out;
		and[263][i] = AND();
		and[263][i].a <== states[i][243];
		and[263][i].b <== eq[3][i].out;
		states[i+1][244] <== and[263][i].out;
		and[264][i] = AND();
		and[264][i].a <== states[i][244];
		and[264][i].b <== eq[11][i].out;
		states[i+1][245] <== and[264][i].out;
		and[265][i] = AND();
		and[265][i].a <== states[i][245];
		and[265][i].b <== eq[6][i].out;
		states[i+1][246] <== and[265][i].out;
		and[266][i] = AND();
		and[266][i].a <== states[i][246];
		and[266][i].b <== eq[4][i].out;
		states[i+1][247] <== and[266][i].out;
		and[267][i] = AND();
		and[267][i].a <== states[i][247];
		and[267][i].b <== eq[13][i].out;
		states[i+1][248] <== and[267][i].out;
		and[268][i] = AND();
		and[268][i].a <== states[i][248];
		and[268][i].b <== eq[44][i].out;
		states[i+1][249] <== and[268][i].out;
		and[269][i] = AND();
		and[269][i].a <== states[i][249];
		and[269][i].b <== eq[10][i].out;
		states[i+1][250] <== and[269][i].out;
		and[270][i] = AND();
		and[270][i].a <== states[i][250];
		and[270][i].b <== eq[33][i].out;
		states[i+1][251] <== and[270][i].out;
		and[271][i] = AND();
		and[271][i].a <== states[i][251];
		and[271][i].b <== eq[31][i].out;
		states[i+1][252] <== and[271][i].out;
		and[272][i] = AND();
		and[272][i].a <== states[i][252];
		and[272][i].b <== eq[21][i].out;
		states[i+1][253] <== and[272][i].out;
		and[273][i] = AND();
		and[273][i].a <== states[i][253];
		and[273][i].b <== eq[1][i].out;
		states[i+1][254] <== and[273][i].out;
		and[274][i] = AND();
		and[274][i].a <== states[i][254];
		and[274][i].b <== eq[19][i].out;
		states[i+1][255] <== and[274][i].out;
		and[275][i] = AND();
		and[275][i].a <== states[i][255];
		and[275][i].b <== eq[19][i].out;
		states[i+1][256] <== and[275][i].out;
		and[276][i] = AND();
		and[276][i].a <== states[i][256];
		and[276][i].b <== eq[1][i].out;
		states[i+1][257] <== and[276][i].out;
		and[277][i] = AND();
		and[277][i].a <== states[i][257];
		and[277][i].b <== eq[3][i].out;
		states[i+1][258] <== and[277][i].out;
		and[278][i] = AND();
		and[278][i].a <== states[i][258];
		and[278][i].b <== eq[26][i].out;
		states[i+1][259] <== and[278][i].out;
		and[279][i] = AND();
		and[279][i].a <== states[i][259];
		and[279][i].b <== eq[16][i].out;
		states[i+1][260] <== and[279][i].out;
		and[280][i] = AND();
		and[280][i].a <== states[i][260];
		and[280][i].b <== eq[10][i].out;
		states[i+1][261] <== and[280][i].out;
		and[281][i] = AND();
		and[281][i].a <== states[i][261];
		and[281][i].b <== eq[7][i].out;
		states[i+1][262] <== and[281][i].out;
		and[282][i] = AND();
		and[282][i].a <== states[i][262];
		and[282][i].b <== eq[5][i].out;
		states[i+1][263] <== and[282][i].out;
		and[283][i] = AND();
		and[283][i].a <== states[i][263];
		and[283][i].b <== eq[6][i].out;
		states[i+1][264] <== and[283][i].out;
		and[284][i] = AND();
		and[284][i].a <== states[i][264];
		and[284][i].b <== eq[4][i].out;
		states[i+1][265] <== and[284][i].out;
		and[285][i] = AND();
		and[285][i].a <== states[i][265];
		and[285][i].b <== eq[11][i].out;
		states[i+1][266] <== and[285][i].out;
		and[286][i] = AND();
		and[286][i].a <== states[i][266];
		and[286][i].b <== eq[13][i].out;
		states[i+1][267] <== and[286][i].out;
		and[287][i] = AND();
		and[287][i].a <== states[i][267];
		and[287][i].b <== eq[26][i].out;
		states[i+1][268] <== and[287][i].out;
		and[288][i] = AND();
		and[288][i].a <== states[i][268];
		and[288][i].b <== eq[44][i].out;
		states[i+1][269] <== and[288][i].out;
		and[289][i] = AND();
		and[289][i].a <== states[i][269];
		and[289][i].b <== multi_or[0][i].out;
		and[290][i] = AND();
		and[290][i].a <== states[i][271];
		and[290][i].b <== and[189][i].out;
		multi_or[10][i] = MultiOR(2);
		multi_or[10][i].in[0] <== and[289][i].out;
		multi_or[10][i].in[1] <== and[290][i].out;
		states[i+1][270] <== multi_or[10][i].out;
		and[291][i] = AND();
		and[291][i].a <== states[i][269];
		and[291][i].b <== and[191][i].out;
		and[292][i] = AND();
		and[292][i].a <== states[i][272];
		and[292][i].b <== and[193][i].out;
		and[293][i] = AND();
		and[293][i].a <== states[i][273];
		and[293][i].b <== and[189][i].out;
		and[294][i] = AND();
		and[294][i].a <== states[i][274];
		and[294][i].b <== and[196][i].out;
		multi_or[11][i] = MultiOR(4);
		multi_or[11][i].in[0] <== and[291][i].out;
		multi_or[11][i].in[1] <== and[292][i].out;
		multi_or[11][i].in[2] <== and[293][i].out;
		multi_or[11][i].in[3] <== and[294][i].out;
		states[i+1][271] <== multi_or[11][i].out;
		and[295][i] = AND();
		and[295][i].a <== states[i][269];
		and[295][i].b <== eq[54][i].out;
		states[i+1][272] <== and[295][i].out;
		and[296][i] = AND();
		and[296][i].a <== states[i][269];
		and[296][i].b <== multi_or[3][i].out;
		and[297][i] = AND();
		and[297][i].a <== states[i][275];
		and[297][i].b <== and[200][i].out;
		and[298][i] = AND();
		and[298][i].a <== states[i][276];
		and[298][i].b <== and[189][i].out;
		and[299][i] = AND();
		and[299][i].a <== states[i][277];
		and[299][i].b <== multi_or[4][i].out;
		multi_or[12][i] = MultiOR(4);
		multi_or[12][i].in[0] <== and[296][i].out;
		multi_or[12][i].in[1] <== and[297][i].out;
		multi_or[12][i].in[2] <== and[298][i].out;
		multi_or[12][i].in[3] <== and[299][i].out;
		states[i+1][273] <== multi_or[12][i].out;
		and[300][i] = AND();
		and[300][i].a <== states[i][269];
		and[300][i].b <== eq[85][i].out;
		states[i+1][274] <== and[300][i].out;
		and[301][i] = AND();
		and[301][i].a <== states[i][269];
		and[301][i].b <== eq[86][i].out;
		states[i+1][275] <== and[301][i].out;
		and[302][i] = AND();
		and[302][i].a <== states[i][269];
		and[302][i].b <== multi_or[6][i].out;
		states[i+1][276] <== and[302][i].out;
		and[303][i] = AND();
		and[303][i].a <== states[i][269];
		and[303][i].b <== eq[90][i].out;
		states[i+1][277] <== and[303][i].out;
		and[304][i] = AND();
		and[304][i].a <== states[i][270];
		and[304][i].b <== eq[44][i].out;
		states[i+1][278] <== and[304][i].out;
		eq[94][i] = IsEqual();
		eq[94][i].in[0] <== in[i];
		eq[94][i].in[1] <== 50;
		and[305][i] = AND();
		and[305][i].a <== states[i][278];
		and[305][i].b <== eq[94][i].out;
		states[i+1][279] <== and[305][i].out;
		eq[95][i] = IsEqual();
		eq[95][i].in[0] <== in[i];
		eq[95][i].in[1] <== 53;
		and[306][i] = AND();
		and[306][i].a <== states[i][279];
		and[306][i].b <== eq[95][i].out;
		states[i+1][280] <== and[306][i].out;
		and[307][i] = AND();
		and[307][i].a <== states[i][280];
		and[307][i].b <== eq[10][i].out;
		states[i+1][281] <== and[307][i].out;
		and[308][i] = AND();
		and[308][i].a <== states[i][281];
		and[308][i].b <== eq[33][i].out;
		states[i+1][282] <== and[308][i].out;
		and[309][i] = AND();
		and[309][i].a <== states[i][282];
		and[309][i].b <== eq[25][i].out;
		states[i+1][283] <== and[309][i].out;
		and[310][i] = AND();
		and[310][i].a <== states[i][283];
		and[310][i].b <== eq[17][i].out;
		states[i+1][284] <== and[310][i].out;
		eq[96][i] = IsEqual();
		eq[96][i].in[0] <== in[i];
		eq[96][i].in[1] <== 54;
		eq[97][i] = IsEqual();
		eq[97][i].in[0] <== in[i];
		eq[97][i].in[1] <== 55;
		and[311][i] = AND();
		and[311][i].a <== states[i][284];
		multi_or[13][i] = MultiOR(10);
		multi_or[13][i].in[0] <== eq[44][i].out;
		multi_or[13][i].in[1] <== eq[42][i].out;
		multi_or[13][i].in[2] <== eq[94][i].out;
		multi_or[13][i].in[3] <== eq[23][i].out;
		multi_or[13][i].in[4] <== eq[43][i].out;
		multi_or[13][i].in[5] <== eq[95][i].out;
		multi_or[13][i].in[6] <== eq[96][i].out;
		multi_or[13][i].in[7] <== eq[97][i].out;
		multi_or[13][i].in[8] <== eq[91][i].out;
		multi_or[13][i].in[9] <== eq[30][i].out;
		and[311][i].b <== multi_or[13][i].out;
		and[312][i] = AND();
		and[312][i].a <== states[i][285];
		and[312][i].b <== multi_or[13][i].out;
		multi_or[14][i] = MultiOR(2);
		multi_or[14][i].in[0] <== and[311][i].out;
		multi_or[14][i].in[1] <== and[312][i].out;
		states[i+1][285] <== multi_or[14][i].out;
		from_zero_enabled[i] <== MultiNOR(285)([states_tmp[i+1][1], states[i+1][2], states[i+1][3], states[i+1][4], states[i+1][5], states[i+1][6], states[i+1][7], states[i+1][8], states[i+1][9], states[i+1][10], states[i+1][11], states[i+1][12], states[i+1][13], states[i+1][14], states[i+1][15], states[i+1][16], states[i+1][17], states[i+1][18], states[i+1][19], states[i+1][20], states[i+1][21], states[i+1][22], states[i+1][23], states[i+1][24], states[i+1][25], states[i+1][26], states[i+1][27], states[i+1][28], states[i+1][29], states[i+1][30], states[i+1][31], states[i+1][32], states[i+1][33], states[i+1][34], states[i+1][35], states[i+1][36], states[i+1][37], states[i+1][38], states[i+1][39], states[i+1][40], states[i+1][41], states[i+1][42], states[i+1][43], states[i+1][44], states[i+1][45], states[i+1][46], states[i+1][47], states[i+1][48], states[i+1][49], states[i+1][50], states[i+1][51], states[i+1][52], states[i+1][53], states[i+1][54], states[i+1][55], states[i+1][56], states[i+1][57], states[i+1][58], states[i+1][59], states[i+1][60], states[i+1][61], states[i+1][62], states[i+1][63], states[i+1][64], states[i+1][65], states[i+1][66], states[i+1][67], states[i+1][68], states[i+1][69], states[i+1][70], states[i+1][71], states[i+1][72], states[i+1][73], states[i+1][74], states[i+1][75], states[i+1][76], states[i+1][77], states[i+1][78], states[i+1][79], states[i+1][80], states[i+1][81], states[i+1][82], states[i+1][83], states[i+1][84], states[i+1][85], states[i+1][86], states[i+1][87], states[i+1][88], states[i+1][89], states[i+1][90], states[i+1][91], states[i+1][92], states[i+1][93], states[i+1][94], states[i+1][95], states[i+1][96], states[i+1][97], states[i+1][98], states[i+1][99], states[i+1][100], states[i+1][101], states[i+1][102], states[i+1][103], states[i+1][104], states[i+1][105], states[i+1][106], states[i+1][107], states[i+1][108], states[i+1][109], states[i+1][110], states[i+1][111], states[i+1][112], states[i+1][113], states[i+1][114], states[i+1][115], states[i+1][116], states[i+1][117], states[i+1][118], states[i+1][119], states[i+1][120], states[i+1][121], states[i+1][122], states[i+1][123], states[i+1][124], states[i+1][125], states[i+1][126], states[i+1][127], states[i+1][128], states[i+1][129], states[i+1][130], states[i+1][131], states[i+1][132], states[i+1][133], states[i+1][134], states[i+1][135], states[i+1][136], states[i+1][137], states[i+1][138], states[i+1][139], states[i+1][140], states[i+1][141], states[i+1][142], states[i+1][143], states[i+1][144], states[i+1][145], states[i+1][146], states[i+1][147], states[i+1][148], states[i+1][149], states[i+1][150], states[i+1][151], states[i+1][152], states[i+1][153], states[i+1][154], states[i+1][155], states[i+1][156], states[i+1][157], states[i+1][158], states[i+1][159], states[i+1][160], states[i+1][161], states[i+1][162], states[i+1][163], states[i+1][164], states[i+1][165], states[i+1][166], states[i+1][167], states[i+1][168], states[i+1][169], states[i+1][170], states[i+1][171], states[i+1][172], states[i+1][173], states[i+1][174], states[i+1][175], states[i+1][176], states[i+1][177], states[i+1][178], states[i+1][179], states[i+1][180], states[i+1][181], states[i+1][182], states[i+1][183], states[i+1][184], states[i+1][185], states[i+1][186], states[i+1][187], states[i+1][188], states[i+1][189], states[i+1][190], states[i+1][191], states[i+1][192], states[i+1][193], states[i+1][194], states[i+1][195], states[i+1][196], states[i+1][197], states[i+1][198], states[i+1][199], states[i+1][200], states[i+1][201], states[i+1][202], states[i+1][203], states[i+1][204], states[i+1][205], states[i+1][206], states[i+1][207], states[i+1][208], states[i+1][209], states[i+1][210], states[i+1][211], states[i+1][212], states[i+1][213], states[i+1][214], states[i+1][215], states[i+1][216], states[i+1][217], states[i+1][218], states[i+1][219], states[i+1][220], states[i+1][221], states[i+1][222], states[i+1][223], states[i+1][224], states[i+1][225], states[i+1][226], states[i+1][227], states[i+1][228], states[i+1][229], states[i+1][230], states[i+1][231], states[i+1][232], states[i+1][233], states[i+1][234], states[i+1][235], states[i+1][236], states[i+1][237], states[i+1][238], states[i+1][239], states[i+1][240], states[i+1][241], states[i+1][242], states[i+1][243], states[i+1][244], states[i+1][245], states[i+1][246], states[i+1][247], states[i+1][248], states[i+1][249], states[i+1][250], states[i+1][251], states[i+1][252], states[i+1][253], states[i+1][254], states[i+1][255], states[i+1][256], states[i+1][257], states[i+1][258], states[i+1][259], states[i+1][260], states[i+1][261], states[i+1][262], states[i+1][263], states[i+1][264], states[i+1][265], states[i+1][266], states[i+1][267], states[i+1][268], states[i+1][269], states[i+1][270], states[i+1][271], states[i+1][272], states[i+1][273], states[i+1][274], states[i+1][275], states[i+1][276], states[i+1][277], states[i+1][278], states[i+1][279], states[i+1][280], states[i+1][281], states[i+1][282], states[i+1][283], states[i+1][284], states[i+1][285]]);
		states[i+1][1] <== MultiOR(2)([states_tmp[i+1][1], from_zero_enabled[i] * and[0][i].out]);
		state_changed[i].in[0] <== states[i+1][1];
		state_changed[i].in[1] <== states[i+1][2];
		state_changed[i].in[2] <== states[i+1][3];
		state_changed[i].in[3] <== states[i+1][4];
		state_changed[i].in[4] <== states[i+1][5];
		state_changed[i].in[5] <== states[i+1][6];
		state_changed[i].in[6] <== states[i+1][7];
		state_changed[i].in[7] <== states[i+1][8];
		state_changed[i].in[8] <== states[i+1][9];
		state_changed[i].in[9] <== states[i+1][10];
		state_changed[i].in[10] <== states[i+1][11];
		state_changed[i].in[11] <== states[i+1][12];
		state_changed[i].in[12] <== states[i+1][13];
		state_changed[i].in[13] <== states[i+1][14];
		state_changed[i].in[14] <== states[i+1][15];
		state_changed[i].in[15] <== states[i+1][16];
		state_changed[i].in[16] <== states[i+1][17];
		state_changed[i].in[17] <== states[i+1][18];
		state_changed[i].in[18] <== states[i+1][19];
		state_changed[i].in[19] <== states[i+1][20];
		state_changed[i].in[20] <== states[i+1][21];
		state_changed[i].in[21] <== states[i+1][22];
		state_changed[i].in[22] <== states[i+1][23];
		state_changed[i].in[23] <== states[i+1][24];
		state_changed[i].in[24] <== states[i+1][25];
		state_changed[i].in[25] <== states[i+1][26];
		state_changed[i].in[26] <== states[i+1][27];
		state_changed[i].in[27] <== states[i+1][28];
		state_changed[i].in[28] <== states[i+1][29];
		state_changed[i].in[29] <== states[i+1][30];
		state_changed[i].in[30] <== states[i+1][31];
		state_changed[i].in[31] <== states[i+1][32];
		state_changed[i].in[32] <== states[i+1][33];
		state_changed[i].in[33] <== states[i+1][34];
		state_changed[i].in[34] <== states[i+1][35];
		state_changed[i].in[35] <== states[i+1][36];
		state_changed[i].in[36] <== states[i+1][37];
		state_changed[i].in[37] <== states[i+1][38];
		state_changed[i].in[38] <== states[i+1][39];
		state_changed[i].in[39] <== states[i+1][40];
		state_changed[i].in[40] <== states[i+1][41];
		state_changed[i].in[41] <== states[i+1][42];
		state_changed[i].in[42] <== states[i+1][43];
		state_changed[i].in[43] <== states[i+1][44];
		state_changed[i].in[44] <== states[i+1][45];
		state_changed[i].in[45] <== states[i+1][46];
		state_changed[i].in[46] <== states[i+1][47];
		state_changed[i].in[47] <== states[i+1][48];
		state_changed[i].in[48] <== states[i+1][49];
		state_changed[i].in[49] <== states[i+1][50];
		state_changed[i].in[50] <== states[i+1][51];
		state_changed[i].in[51] <== states[i+1][52];
		state_changed[i].in[52] <== states[i+1][53];
		state_changed[i].in[53] <== states[i+1][54];
		state_changed[i].in[54] <== states[i+1][55];
		state_changed[i].in[55] <== states[i+1][56];
		state_changed[i].in[56] <== states[i+1][57];
		state_changed[i].in[57] <== states[i+1][58];
		state_changed[i].in[58] <== states[i+1][59];
		state_changed[i].in[59] <== states[i+1][60];
		state_changed[i].in[60] <== states[i+1][61];
		state_changed[i].in[61] <== states[i+1][62];
		state_changed[i].in[62] <== states[i+1][63];
		state_changed[i].in[63] <== states[i+1][64];
		state_changed[i].in[64] <== states[i+1][65];
		state_changed[i].in[65] <== states[i+1][66];
		state_changed[i].in[66] <== states[i+1][67];
		state_changed[i].in[67] <== states[i+1][68];
		state_changed[i].in[68] <== states[i+1][69];
		state_changed[i].in[69] <== states[i+1][70];
		state_changed[i].in[70] <== states[i+1][71];
		state_changed[i].in[71] <== states[i+1][72];
		state_changed[i].in[72] <== states[i+1][73];
		state_changed[i].in[73] <== states[i+1][74];
		state_changed[i].in[74] <== states[i+1][75];
		state_changed[i].in[75] <== states[i+1][76];
		state_changed[i].in[76] <== states[i+1][77];
		state_changed[i].in[77] <== states[i+1][78];
		state_changed[i].in[78] <== states[i+1][79];
		state_changed[i].in[79] <== states[i+1][80];
		state_changed[i].in[80] <== states[i+1][81];
		state_changed[i].in[81] <== states[i+1][82];
		state_changed[i].in[82] <== states[i+1][83];
		state_changed[i].in[83] <== states[i+1][84];
		state_changed[i].in[84] <== states[i+1][85];
		state_changed[i].in[85] <== states[i+1][86];
		state_changed[i].in[86] <== states[i+1][87];
		state_changed[i].in[87] <== states[i+1][88];
		state_changed[i].in[88] <== states[i+1][89];
		state_changed[i].in[89] <== states[i+1][90];
		state_changed[i].in[90] <== states[i+1][91];
		state_changed[i].in[91] <== states[i+1][92];
		state_changed[i].in[92] <== states[i+1][93];
		state_changed[i].in[93] <== states[i+1][94];
		state_changed[i].in[94] <== states[i+1][95];
		state_changed[i].in[95] <== states[i+1][96];
		state_changed[i].in[96] <== states[i+1][97];
		state_changed[i].in[97] <== states[i+1][98];
		state_changed[i].in[98] <== states[i+1][99];
		state_changed[i].in[99] <== states[i+1][100];
		state_changed[i].in[100] <== states[i+1][101];
		state_changed[i].in[101] <== states[i+1][102];
		state_changed[i].in[102] <== states[i+1][103];
		state_changed[i].in[103] <== states[i+1][104];
		state_changed[i].in[104] <== states[i+1][105];
		state_changed[i].in[105] <== states[i+1][106];
		state_changed[i].in[106] <== states[i+1][107];
		state_changed[i].in[107] <== states[i+1][108];
		state_changed[i].in[108] <== states[i+1][109];
		state_changed[i].in[109] <== states[i+1][110];
		state_changed[i].in[110] <== states[i+1][111];
		state_changed[i].in[111] <== states[i+1][112];
		state_changed[i].in[112] <== states[i+1][113];
		state_changed[i].in[113] <== states[i+1][114];
		state_changed[i].in[114] <== states[i+1][115];
		state_changed[i].in[115] <== states[i+1][116];
		state_changed[i].in[116] <== states[i+1][117];
		state_changed[i].in[117] <== states[i+1][118];
		state_changed[i].in[118] <== states[i+1][119];
		state_changed[i].in[119] <== states[i+1][120];
		state_changed[i].in[120] <== states[i+1][121];
		state_changed[i].in[121] <== states[i+1][122];
		state_changed[i].in[122] <== states[i+1][123];
		state_changed[i].in[123] <== states[i+1][124];
		state_changed[i].in[124] <== states[i+1][125];
		state_changed[i].in[125] <== states[i+1][126];
		state_changed[i].in[126] <== states[i+1][127];
		state_changed[i].in[127] <== states[i+1][128];
		state_changed[i].in[128] <== states[i+1][129];
		state_changed[i].in[129] <== states[i+1][130];
		state_changed[i].in[130] <== states[i+1][131];
		state_changed[i].in[131] <== states[i+1][132];
		state_changed[i].in[132] <== states[i+1][133];
		state_changed[i].in[133] <== states[i+1][134];
		state_changed[i].in[134] <== states[i+1][135];
		state_changed[i].in[135] <== states[i+1][136];
		state_changed[i].in[136] <== states[i+1][137];
		state_changed[i].in[137] <== states[i+1][138];
		state_changed[i].in[138] <== states[i+1][139];
		state_changed[i].in[139] <== states[i+1][140];
		state_changed[i].in[140] <== states[i+1][141];
		state_changed[i].in[141] <== states[i+1][142];
		state_changed[i].in[142] <== states[i+1][143];
		state_changed[i].in[143] <== states[i+1][144];
		state_changed[i].in[144] <== states[i+1][145];
		state_changed[i].in[145] <== states[i+1][146];
		state_changed[i].in[146] <== states[i+1][147];
		state_changed[i].in[147] <== states[i+1][148];
		state_changed[i].in[148] <== states[i+1][149];
		state_changed[i].in[149] <== states[i+1][150];
		state_changed[i].in[150] <== states[i+1][151];
		state_changed[i].in[151] <== states[i+1][152];
		state_changed[i].in[152] <== states[i+1][153];
		state_changed[i].in[153] <== states[i+1][154];
		state_changed[i].in[154] <== states[i+1][155];
		state_changed[i].in[155] <== states[i+1][156];
		state_changed[i].in[156] <== states[i+1][157];
		state_changed[i].in[157] <== states[i+1][158];
		state_changed[i].in[158] <== states[i+1][159];
		state_changed[i].in[159] <== states[i+1][160];
		state_changed[i].in[160] <== states[i+1][161];
		state_changed[i].in[161] <== states[i+1][162];
		state_changed[i].in[162] <== states[i+1][163];
		state_changed[i].in[163] <== states[i+1][164];
		state_changed[i].in[164] <== states[i+1][165];
		state_changed[i].in[165] <== states[i+1][166];
		state_changed[i].in[166] <== states[i+1][167];
		state_changed[i].in[167] <== states[i+1][168];
		state_changed[i].in[168] <== states[i+1][169];
		state_changed[i].in[169] <== states[i+1][170];
		state_changed[i].in[170] <== states[i+1][171];
		state_changed[i].in[171] <== states[i+1][172];
		state_changed[i].in[172] <== states[i+1][173];
		state_changed[i].in[173] <== states[i+1][174];
		state_changed[i].in[174] <== states[i+1][175];
		state_changed[i].in[175] <== states[i+1][176];
		state_changed[i].in[176] <== states[i+1][177];
		state_changed[i].in[177] <== states[i+1][178];
		state_changed[i].in[178] <== states[i+1][179];
		state_changed[i].in[179] <== states[i+1][180];
		state_changed[i].in[180] <== states[i+1][181];
		state_changed[i].in[181] <== states[i+1][182];
		state_changed[i].in[182] <== states[i+1][183];
		state_changed[i].in[183] <== states[i+1][184];
		state_changed[i].in[184] <== states[i+1][185];
		state_changed[i].in[185] <== states[i+1][186];
		state_changed[i].in[186] <== states[i+1][187];
		state_changed[i].in[187] <== states[i+1][188];
		state_changed[i].in[188] <== states[i+1][189];
		state_changed[i].in[189] <== states[i+1][190];
		state_changed[i].in[190] <== states[i+1][191];
		state_changed[i].in[191] <== states[i+1][192];
		state_changed[i].in[192] <== states[i+1][193];
		state_changed[i].in[193] <== states[i+1][194];
		state_changed[i].in[194] <== states[i+1][195];
		state_changed[i].in[195] <== states[i+1][196];
		state_changed[i].in[196] <== states[i+1][197];
		state_changed[i].in[197] <== states[i+1][198];
		state_changed[i].in[198] <== states[i+1][199];
		state_changed[i].in[199] <== states[i+1][200];
		state_changed[i].in[200] <== states[i+1][201];
		state_changed[i].in[201] <== states[i+1][202];
		state_changed[i].in[202] <== states[i+1][203];
		state_changed[i].in[203] <== states[i+1][204];
		state_changed[i].in[204] <== states[i+1][205];
		state_changed[i].in[205] <== states[i+1][206];
		state_changed[i].in[206] <== states[i+1][207];
		state_changed[i].in[207] <== states[i+1][208];
		state_changed[i].in[208] <== states[i+1][209];
		state_changed[i].in[209] <== states[i+1][210];
		state_changed[i].in[210] <== states[i+1][211];
		state_changed[i].in[211] <== states[i+1][212];
		state_changed[i].in[212] <== states[i+1][213];
		state_changed[i].in[213] <== states[i+1][214];
		state_changed[i].in[214] <== states[i+1][215];
		state_changed[i].in[215] <== states[i+1][216];
		state_changed[i].in[216] <== states[i+1][217];
		state_changed[i].in[217] <== states[i+1][218];
		state_changed[i].in[218] <== states[i+1][219];
		state_changed[i].in[219] <== states[i+1][220];
		state_changed[i].in[220] <== states[i+1][221];
		state_changed[i].in[221] <== states[i+1][222];
		state_changed[i].in[222] <== states[i+1][223];
		state_changed[i].in[223] <== states[i+1][224];
		state_changed[i].in[224] <== states[i+1][225];
		state_changed[i].in[225] <== states[i+1][226];
		state_changed[i].in[226] <== states[i+1][227];
		state_changed[i].in[227] <== states[i+1][228];
		state_changed[i].in[228] <== states[i+1][229];
		state_changed[i].in[229] <== states[i+1][230];
		state_changed[i].in[230] <== states[i+1][231];
		state_changed[i].in[231] <== states[i+1][232];
		state_changed[i].in[232] <== states[i+1][233];
		state_changed[i].in[233] <== states[i+1][234];
		state_changed[i].in[234] <== states[i+1][235];
		state_changed[i].in[235] <== states[i+1][236];
		state_changed[i].in[236] <== states[i+1][237];
		state_changed[i].in[237] <== states[i+1][238];
		state_changed[i].in[238] <== states[i+1][239];
		state_changed[i].in[239] <== states[i+1][240];
		state_changed[i].in[240] <== states[i+1][241];
		state_changed[i].in[241] <== states[i+1][242];
		state_changed[i].in[242] <== states[i+1][243];
		state_changed[i].in[243] <== states[i+1][244];
		state_changed[i].in[244] <== states[i+1][245];
		state_changed[i].in[245] <== states[i+1][246];
		state_changed[i].in[246] <== states[i+1][247];
		state_changed[i].in[247] <== states[i+1][248];
		state_changed[i].in[248] <== states[i+1][249];
		state_changed[i].in[249] <== states[i+1][250];
		state_changed[i].in[250] <== states[i+1][251];
		state_changed[i].in[251] <== states[i+1][252];
		state_changed[i].in[252] <== states[i+1][253];
		state_changed[i].in[253] <== states[i+1][254];
		state_changed[i].in[254] <== states[i+1][255];
		state_changed[i].in[255] <== states[i+1][256];
		state_changed[i].in[256] <== states[i+1][257];
		state_changed[i].in[257] <== states[i+1][258];
		state_changed[i].in[258] <== states[i+1][259];
		state_changed[i].in[259] <== states[i+1][260];
		state_changed[i].in[260] <== states[i+1][261];
		state_changed[i].in[261] <== states[i+1][262];
		state_changed[i].in[262] <== states[i+1][263];
		state_changed[i].in[263] <== states[i+1][264];
		state_changed[i].in[264] <== states[i+1][265];
		state_changed[i].in[265] <== states[i+1][266];
		state_changed[i].in[266] <== states[i+1][267];
		state_changed[i].in[267] <== states[i+1][268];
		state_changed[i].in[268] <== states[i+1][269];
		state_changed[i].in[269] <== states[i+1][270];
		state_changed[i].in[270] <== states[i+1][271];
		state_changed[i].in[271] <== states[i+1][272];
		state_changed[i].in[272] <== states[i+1][273];
		state_changed[i].in[273] <== states[i+1][274];
		state_changed[i].in[274] <== states[i+1][275];
		state_changed[i].in[275] <== states[i+1][276];
		state_changed[i].in[276] <== states[i+1][277];
		state_changed[i].in[277] <== states[i+1][278];
		state_changed[i].in[278] <== states[i+1][279];
		state_changed[i].in[279] <== states[i+1][280];
		state_changed[i].in[280] <== states[i+1][281];
		state_changed[i].in[281] <== states[i+1][282];
		state_changed[i].in[282] <== states[i+1][283];
		state_changed[i].in[283] <== states[i+1][284];
		state_changed[i].in[284] <== states[i+1][285];
	}

	component is_accepted = MultiOR(num_bytes+1);
	for (var i = 0; i <= num_bytes; i++) {
		is_accepted.in[i] <== states[i][285];
	}
	out <== is_accepted.out;
	signal is_consecutive[msg_bytes+1][2];
	is_consecutive[msg_bytes][1] <== 1;
	for (var i = 0; i < msg_bytes; i++) {
		is_consecutive[msg_bytes-1-i][0] <== states[num_bytes-i][1] * (1 - is_consecutive[msg_bytes-i][1]) + is_consecutive[msg_bytes-i][1];
		is_consecutive[msg_bytes-1-i][1] <== state_changed[msg_bytes-i].out * is_consecutive[msg_bytes-1-i][0];
	}
	signal is_substr0[msg_bytes][3];
	signal is_reveal0[msg_bytes];
	signal output reveal0[msg_bytes];
	for (var i = 0; i < msg_bytes; i++) {
		is_substr0[i][0] <== 0;
		is_substr0[i][1] <== is_substr0[i][0] + states[i+1][1] * states[i+2][1];
		is_substr0[i][2] <== is_substr0[i][1] + states[i+1][22] * states[i+2][1];
		is_reveal0[i] <== is_substr0[i][2] * is_consecutive[i][1];
		reveal0[i] <== in[i+1] * is_reveal0[i];
	}
}